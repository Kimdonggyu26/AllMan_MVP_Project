<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="rvListByDate">
		SELECT 
					 R.REVIEW_NO
				 , R.REVIEW_CONTENT
				 , R.GRADE
				 , R.USER_NO
				 , R.MOVIE_NO
				 , R.REVIEW_DATE
				 , U.USER_NICKNAME
				 , COUNT(L.REVIEW_NO) AS LIKE_COUNT
			FROM 
					 REVIEW R
		  JOIN
		  		 USERS U ON R.USER_NO = U.USER_NO
 LEFT JOIN LIKES L ON R.REVIEW_NO = L.REVIEW_NO
		 WHERE
		 		   R.MOVIE_NO = ?
     GROUP 
     	  BY 
    			 R.REVIEW_NO, R.REVIEW_CONTENT, R.GRADE, R.USER_NO, R.MOVIE_NO, R.REVIEW_DATE, U.USER_NICKNAME
		 ORDER
		 	  BY 
		 	  	R.REVIEW_DATE DESC
	</entry>
	
	<entry key="rvListByLike">
		SELECT 
		        R.REVIEW_NO
		      , R.REVIEW_CONTENT
		      , R.GRADE
		      , R.USER_NO
		      , R.MOVIE_NO
		      , R.REVIEW_DATE
		      , U.USER_NICKNAME
		      , COUNT(L.REVIEW_NO) AS LIKE_COUNT
		   FROM 
		 			  REVIEW R
		   JOIN
		        USERS U ON R.USER_NO = U.USER_NO
	LEFT JOIN 
		        LIKES L ON R.REVIEW_NO = L.REVIEW_NO 
		  WHERE 
			      R.MOVIE_NO = ?
		  GROUP
		  	 BY 
		        R.REVIEW_NO, R.REVIEW_CONTENT, R.GRADE, R.USER_NO, R.MOVIE_NO, R.REVIEW_DATE, U.USER_NICKNAME
		 	ORDER
		 	   BY
		        LIKE_COUNT DESC
		       
	</entry>
	
	<entry key="insertReview">
		INSERT
		  INTO 
		  		 REVIEW
	  		(
	  		  REVIEW_NO
				, REVIEW_CONTENT
				, GRADE
				, USER_NO
				, MOVIE_NO
				, REVIEW_DATE
	  		)
	  VALUES
	  		(
	  			SEQ_REVIEWNO.NEXTVAL
	  		, ?
	  		, ?
	  		, ?
	  		, ?
	  		, SYSDATE
	  		)
	</entry>
	
	
	
	<entry key="getMvpGrade">
		SELECT
				   ROUND(AVG(GRADE), 1) AS AVG_GRADE
			FROM
					 LIKES
		 WHERE 
		 			 MOVIE_NO = ?
		 GROUP
		 	  BY
		 	  	 MOVIE_NO
	</entry>
	
	<entry key="checkReviewLiked">
		SELECT
					 COUNT(*) AS COUNT
		  FROM 
		  		 REVIEW 
		 WHERE 
		 			 USER_NO = ? AND REVIEW_NO = ?
	</entry>

</properties>